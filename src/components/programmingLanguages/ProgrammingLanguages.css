.canvas-container {
  /* Center items and allow them to grow vertically */
  display: flex;
  justify-content: center;
  align-items: center;

  /* Fill width */
  width: 100%;

  /* Default container height (desktop) */
  height: 80vh;
  min-height: 500px;
  max-height: 800px;

  /* Positioning */
  position: relative;

  /* IMPORTANT: Allow vertical scroll if canvas is larger than container */
  overflow-y: auto;  

  /* Hide scrollbar “thumb,” but still allow scrolling */
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;     /* Firefox */
}

.canvas-container::-webkit-scrollbar {
  display: none;  /* Chrome, Safari, Opera */
}

.complex-canvas {
  /* Let JS handle actual resolution. This just ensures it fills container's width */
  width: 100%;
  height: 100%;
  display: block;

  /* Allow horizontal panning, but not vertical on the canvas itself */
  touch-action: pan-x;
}

/* ----------- Mobile-specific styles ----------- */
@media (max-width: 600px) {
  .canvas-container {
    /* Let container auto-expand with content on mobile */
    height: auto;
    min-height: 500px;
    max-height: none;  /* remove if you want truly unlimited height */

    /* Some padding around the canvas if you like */
    padding: 20px 10px;
    box-sizing: border-box;

    /* Still allow vertical scroll if needed */
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; /* smooth scrolling on iOS */
  }

  .complex-canvas {
    /* Let the JS set the canvas height. Don’t constrain it here */
    height: auto;
    min-height: 800px;  /* or remove if you want no forced minimum */
    overflow: visible;
  }
}

/* (Optional) If you have extremely large sets on certain screens: */
@media (min-width: 601px) and (max-height: 800px) {
  .canvas-container {
    height: 90vh;
    min-height: 600px;
    /* Keep overflow-y: auto so it scrolls if needed */
    overflow-y: auto;
  }
}
